universityadd<-cbind(university,"106/103"=university$X106/university$X103)
sort(universityadd$`106/103`,decreasing = T)
universityadd<-cbind(university,"106/103"=university$X106/university$X103)%>%arrange(desc(`106/103`))
library(dplyr)
universityadd<-cbind(university,"106/103"=university$X106/university$X103)%>%arrange(desc(`106/103`))
universityadd<-cbind(university,"106/103"=university$X106/university$X103)%>%arrange(desc(`106/103`))%>%filter(106/103>1.05)
universityadd<-cbind(university,"106/103"=university$X106/university$X103)%>%arrange(desc(`106/103`))
filter(universityadd,106/103>1.05)
select(universityadd,106/103>1.05)
universityadd<-cbind(university,"106/103"=university$X106/university$X103)%>%arrange(desc(`106/103`))%>%filter(106/103>1.05)
universityadd<-cbind(university,"106/103"=university$X106/university$X103)%>%arrange(desc(`106/103`))
str(universityadd)
filter(universityadd,'106/103'>1.05)
universityadd<-cbind(university,"106/103"=university$X106/university$X103)%>%arrange(desc(`106/103`))
filter(universityadd,'106/103'>1.05)
filter(universityadd,106/103>1.05)
universityadd<-cbind(university,increase=university$X106/university$X103)%>%arrange(desc(`106/103`))
universityadd<-cbind(university,increase=university$X106/university$X103)%>%arrange(desc(`increase`))
filter(universityadd,increase>1.05)
grep("-",X103_LevelSalary$大職業別)
grep("-",X106_LevelSalary$大職業別)
grep("-",universityadd$大職業別)
str(universityadd)
str(X103_LevelSalary)
grep("-",X103_LevelSalary$大職業別)
grep("-",universityadd$大職業別)
universityadd[1,]
universityadd[,1]
strsplit(universityadd[,1],"-")
#算出兩年中薪資提高的比例並將他由大到小排序，儲存在新的表格中 universityadd
universityadd<-cbind(university,increase=university$X106/university$X103)%>%arrange(desc(`increase`))
#算出兩年中薪資提高的比例並將他由大到小排序，儲存在新的表格中 universityadd
universityadd<-cbind(university,increase=university$X106/university$X103)%>%arrange(desc(`increase`))
#將所需的資料欄位自 X103_LevelSalary 及 X106_LevelSalary 中取出，變成新的表格 university
university<-data.frame("職業別"=X103_LevelSalary$大職業別,"103"=X103_LevelSalary$`大學-薪資`,"106"=X106_LevelSalary$`大學-薪資`)
#將 university 資料中的-轉成空值，並轉換資料型態為數字型態
university$X103<-gsub("—",NA,university$X103)
university$X106<-gsub("—",NA,university$X106)
university$職業別<-as.character(university$職業別)
university$X103<-as.numeric(university$X103)
university$X106<-as.numeric(university$X106)
#算出兩年中薪資提高的比例並將他由大到小排序，儲存在新的表格中 universityadd
universityadd<-cbind(university,increase=university$X106/university$X103)%>%arrange(desc(`increase`))
library(dplyr)
#算出兩年中薪資提高的比例並將他由大到小排序，儲存在新的表格中 universityadd
universityadd<-cbind(university,increase=university$X106/university$X103)%>%arrange(desc(`increase`))
filter(universityadd,increase>1.05)
universityadd[10,]
universityadd[1:10,]
#找出前十名
universityadd[1:10,1]
#找出提搞比例大於1.05的資料
filter(universityadd,increase>1.05)
#找出提搞比例大於1.05的資料
universityadd[filter(universityadd,increase>1.05),1]
universityadd[a,1]
#找出提搞比例大於1.05的資料
universityadd[increase>1.05,1]
str(universityadd)
#找出提搞比例大於1.05的資料
universityadd[increase>1.05,]
library(data.table)
#找出提搞比例大於1.05的資料
data.table(universityadd)
universityadd[increase>1.05,]
#找出提搞比例大於1.05的資料
filter(universityadd,increase>1.05)
#找出提搞比例大於1.05的資料
a<-filter(universityadd,increase>1.05)
universityadd[a,1]
a
class(a)
#找出提搞比例大於1.05的資料
filter(universityadd,increase>1.05)
a[,1]
#分析有哪些職業別
grep("-",universityadd$大職業別)
grep("-",X103_LevelSalary$大職業別)
strsplit(universityadd[,1],"-")
#分析有哪些職業別
grep("-",universityadd$大職業別)
grep("-",X103_LevelSalary$大職業別)
universityadd[,1]
strsplit(universityadd[,1],"-")
str(universityadd)
universityadd[,1]
universityadd[,1]
strsplit(universityadd[,1],"-")
sapply(strsplit(universityadd[,1],"-"),'[',1])
sapply(strsplit(universityadd[,1],"-"),'[',1])))
sapply(strsplit(universityadd$職業別,"-"),'[',1))
sapply(strsplit(universityadd$職業別,"-"),'[',1)
#分析有哪些職業別
b<-sapply(strsplit(universityadd$職業別,"-"),'[',1)
b
class(b)
str(b)
library(SportsAnalytics)
NBA1516<-fetch_NBAPlayerStatistics("18-19")
library(ggplot2)
qplot(Steals,TotalRebounds,data=NBA1516)
install.packages("ggplot2")
library(ggplot2)
qplot(Steals,TotalRebounds,data=NBA1516)
table(b)
#分析有哪些職業別
b<-sapply(strsplit(universityadd$職業別,"-"),'[',1)
table(b)
#分析有哪些職業別
b<-sapply(strsplit(a$職業別,"-"),'[',1)
table(b)
#分析有哪些職業別
b<-sapply(strsplit(a$職業別,"-"),'[',1)
knitr::kable(table(b))
library(dplyr)
library(jsonlite)
#分析有哪些職業別
b<-sapply(strsplit(a$職業別,"-"),'[',1)
knitr::kable(table(b))
install.packages("knitr")
knitr::kable(table(b))
qplot(NBA1516,ase(x=Steals,y=TotalRebounds))+
geom_point()+facet_grid()+geom_smooth()
qplot(Steals,TotalRebounds,data=NBA1516,geom=c("point","smooth"))
?cor
cor(Steals,TotalRebounds)
cor(NBA1516$Steals,NBA1516$TotalRebounds)
ggplot(NBA1516,
aes(x = Steals,
y = TotalRebounds)) +
geom_point()+geom_smooth()
cor(NBA1516$Steals,NBA1516$TotalRebounds)
library(readr)
X201803 <- read_csv("C:/Users/Mimi Liao/Desktop/201803.csv")
View(X201803)
ggplot(X201803,
aes(x = "總計家數",
y = "總計資本額")) +
geom_point()+geom_smooth()
cor(X201803$總計家數,X201803$總計資本額)
ggplot(X201803,
aes(x = "總計家數",
y = "總計資本額")) +
geom_point()+geom_smooth()
ggplot(X201803,
aes(x = 總計家數
y = 總計資本額, )) +
geom_point()+geom_smooth()
ggplot(X201803,
aes(x = "總計資本額",
y = "總計家數")) +
geom_point()+geom_smooth()
ggplot(X201803, aes(x = "總計資本額",y = "總計家數")) + geom_point()+geom_smooth()
ggplot(X201803, aes(x = 總計資本額,y = 總計家數)) + geom_point()+geom_smooth()
ggplot(X201803, aes(x = 總計家數,y =總計資本額 )) + geom_point()+geom_smooth()
filter(X201803,-總計,-台灣地區)
library(dplyr)
filter(X201803,-總計,-台灣地區)
filter(X201803,-總計家數>200000)
201803<-filter(X201803,-總計家數>200000)
201803<-[-1:2,]
201803<-x201803[-1:2,]
201803<-x201803[-(1:2),]
201803<-x201803[-1,]
201803<-x201803[c(-1,-2),]
X201803 <- read_csv("C:/Users/Mimi Liao/Desktop/201803.csv")
201803<-x201803[c(-1,-2),]
y201803<-x201803[c(-1,-2),]
y201803<-X201803[c(-1,-2),]
ggplot(X201803, aes(x = 總計家數,y =總計資本額 )) + geom_point()+geom_smooth()
cor(X201803$總計家數,X201803$總計資本額)
ggplot(X201803, aes(x = 總計家數,y =總計資本額 )) +
geom_point()+geom_smooth()+geom_text(x=148000,y=20000,label=0.9787303)
X201803<-X201803[c(-1,-2),]
cor(X201803$總計家數,X201803$總計資本額)
ggplot(X201803, aes(x = 總計家數,y =總計資本額 )) +
geom_point()+geom_smooth()+geom_text(x=148000,y=20000,label=0.838149)
corr<-cor(X201803$總計家數,X201803$總計資本額)
ggplot(X201803, aes(x = 總計家數,y =總計資本額 )) +
geom_point()+geom_smooth()+geom_text(x=148000,y=20000,label=corr)
library(XML)
animalURL<-"http://data.coa.gov.tw/Service/OpenData/AnimalOpenData.aspx"
animal<-xmlParse(animalURL)
animal<-xmlParse(animalURL)
library(xml2)
animalURL<-"http://data.coa.gov.tw/Service/OpenData/AnimalOpenData.aspx"
animal<-xmlParse(animalURL)
library(jsonlite)
animal<-fromJSON("http://data.coa.gov.tw/Service/OpenData/AnimalOpenData.aspx")
str(animal)
View(animal)
group_by(animal,shelter_name,animal_kind)
group_by(animal,shelter_name,animal_kind)%>%summarise(nkind=n())
animalKind<-group_by(animal,shelter_name,animal_kind)%>%summarise(nkind=n())
View(animal)
View(animalKind)
ggplot()+geom_bar(data=animalKind,aes(x=shelter_name,y=animal_kind),stat="identity")
?rotate
?rotate
?routate
ggplot()+geom_bar(data=animalKind,aes(x=shelter_name,y=animal_kind),facet_grid(animal_kind~.),stat="identity")
ggplot(animalKind,aes(x=shelter_name,y=animal_kind),geom_bar(stat="identity"),)
ggplot(animalKind,aes(x=shelter_name,y=animal_kind),geom_bar(stat="identity"),facet_grid(.~animal_kind))
ggplot(animalKind,aes(x=shelter_name,y=nkind),geom_bar(stat="identity"),facet_grid(.~animal_kind))
ggplot(animalKind,aes(x=shelter_name,y=nkind)+
geom_bar(stat="identity")+
facet_grid(.~animal_kind))
ggplot(animalKind,aes(x=shelter_name,y=nkind))+
geom_bar(stat="identity")+
facet_grid(.~animal_kind))
ggplot(animalKind,aes(x=shelter_name,y=nkind))+
geom_bar(stat="identity")+
facet_grid(.~animal_kind)
ggplot(animalKind,aes(x=shelter_name,y=nkind))+
geom_bar(stat="identity")+
facet_grid(.~animal_kind)+theme_classic()
ggplot(animalKind,aes(x=shelter_name,y=nkind))+
geom_bar(stat="identity")+
facet_grid(.~animal_kind)
ggplot(animalKind,aes(x=shelter_name,y=nkind))+
geom_bar(stat="identity")+
facet_grid(.~animal_kind)+theme_bw()
ggplot(animalKind,aes(x=shelter_name,y=nkind))+
geom_bar(stat="identity")+
facet_grid(.~animal_kind)+theme_classic()+coord_flip()
View(X103_LevelSalary)
library(readr)
X103career <- read_csv("C:/Users/Mimi Liao/Desktop/A17000000J-020066-Qod/103career.csv")
View(X103career)
library(readr)
X104career <- read_csv("C:/Users/Mimi Liao/Desktop/A17000000J-020066-Qod/104career.csv")
View(X104career)
library(readr)
X105career <- read_csv("C:/Users/Mimi Liao/Desktop/A17000000J-020066-Qod/105career.csv")
View(X105career)
library(readr)
X106career <- read_csv("C:/Users/Mimi Liao/Desktop/A17000000J-020066-Qod/106career.csv")
View(X106career)
grep("資訊及通訊傳播業","企業總管理機構及管理顧問業",103career)
grep("資訊及通訊傳播業",103career)
grep("資訊及通訊傳播業",X103career)
grep("資訊及通訊傳播業","企業總管理機構及管理顧問業",X103career)
View(X103career)
career<-rbind(X103career,X104career,X105career,X106career)
View(career)
career1<-career[行業別=="資訊及通訊傳播業",]
career1<-career["行業別"=="資訊及通訊傳播業",]
View(career1)
career1<-filter(career,行業別%in%c("資訊及通訊傳播業","企業總管理機構及管理顧問業","電腦系統設計服務業","資料處理及資訊供應業"))
career1$專業人員.薪資<-as.numeric(test_final$專業人員.薪資)
career1$專業人員.薪資<-as.numeric(career1$專業人員.薪資)
career1$`專業人員-薪資`<-as.numeric(career1$`專業人員-薪資`)
ggplot(career1,
aes(x = 年度,
y = 專業人員-薪資,
color=行業別)) +
geom_line()+theme(text = element_text(family = '黑體-繁 中黑',size = 10))
ggplot(career1,
aes(x = 年度,
y = 專業人員-薪資,
color=行業別)) +
geom_line()+theme(text = element_text(family = '黑體-繁 中黑',size = 10))
ggplot(career1, aes(x = 年度, y = 專業人員-薪資,color=行業別)) +
geom_line()+theme(text = element_text(family = '黑體-繁 中黑',size = 10))
#第三題
salary106<-data.frame("大學"=X106_LevelSalary$`大學-薪資`,"研究所"=X106_LevelSalary$`研究所及以上-薪資`)
View(salary106)
#第三題
salary106<-data.frame(universe=X106_LevelSalary$`大學-薪資`,research=X106_LevelSalary$`研究所及以上-薪資`)
salary_106<-mutate(salary106,increase=rresearch/universe)
salary_106<-mutate(salary106,increase=research/universe)
str(salary106)
salary106$universe<-as.numeric(salary106$universe)
salary106$research<-as.numeric(salary106$research)
salary_106<-mutate(salary106,increase=research/universe)
library(dplyr)
salary_106<-mutate(salary106,increase=research/universe)
salary_106<-mutate(salary106,increase=research/universe)%>%arrange(desc(`increase`))
View(salary106)
View(salary_106)
salary_106[1:10,1]
salary106<-data.frame("職業別"=X106_LevelSalary$大職業別,universe=X106_LevelSalary$`大學-薪資`,research=X106_LevelSalary$`研究所及以上-薪資`)
salary106$universe<-as.numeric(salary106$universe)
salary106$research<-as.numeric(salary106$research)
salary_106<-mutate(salary106,increase=research/universe)%>%arrange(desc(`increase`))
salary_106[1:10,1]
View(X106_LevelSalary)
#第三題
salary106<-data.frame("職業別"=X106_LevelSalary$大職業別,universe=X106_LevelSalary$`大學-薪資`,research=X106_LevelSalary$`研究所及以上-薪資`)
salary106$universe<-as.numeric(salary106$universe)
salary106$research<-as.numeric(salary106$research)
salary_106<-mutate(salary106,increase=research/universe)%>%arrange(desc(`increase`))
salary_106<-cbind(salary106,increase=salary106$research/salary106$universe)%>%arrange(desc(`increase`))
#第三題
salary106<-data.frame("職業別"=X106_LevelSalary$大職業別,universe=X106_LevelSalary$`大學-薪資`,research=X106_LevelSalary$`研究所及以上-薪資`)
#第三題
salary106<-data.frame("職業別"=X106_LevelSalary$大職業別,universe=X106_LevelSalary$`大學-薪資`,research=X106_LevelSalary$`研究所及以上-薪資`)
university$X106<-gsub("—",NA,university$X106)
university$X106<-gsub("—",NA,university$X106)
#第三題
salary106<-data.frame("職業別"=X106_LevelSalary$大職業別,universe=X106_LevelSalary$`大學-薪資`,research=X106_LevelSalary$`研究所及以上-薪資`)
salary106$universe<-gsub("—",NA,salary106$universe)
salary106$research<-gsub("—",NA,salary106$research)
salary106$universe<-as.numeric(salary106$universe)
salary106$research<-as.numeric(salary106$research)
salary_106<-cbind(salary106,increase=salary106$research/salary106$universe)%>%arrange(desc(`increase`))
salary_106[1:10,1]
#第四題
filter(salary_106,職業別%in% c("藝術_娛樂及休閒服務業-技術員及助理專業人員","醫療保健服務業-技術員及助理專業人員","教育服務業-技術員及助理專業人員","支援服務業-技術員及助理專業人員","專業_科學及技術服務業-專業人員"))
#第四題
hobit<-filter(salary_106,職業別%in% c("藝術_娛樂及休閒服務業-技術員及助理專業人員","醫療保健服務業-技術員及助理專業人員","教育服務業-技術員及助理專業人員","支援服務業-技術員及助理專業人員","專業_科學及技術服務業-專業人員"))
View(hobit)
hobitsalary<-cbind(hobit,dif=hobit$research-hobit$universe)
str(hobit)
hobitsalary<-cbind(hobit,dif=hobit$research-hobit$universe)
str(hobit)
str(hobitsalary)
#第二題
college<-data.frame("職業別"=X103_LevelSalary$大職業別,"103"=X103_LevelSalary$`大學-女/男`,"104"=X104_LevelSalary$`大學-女/男`,"105"=X105_LevelSalary$`大學-女/男`,"106"=X106_LevelSalary$`大學-女/男`)
View(college)
college$X103<-gsub("—",NA,college$X103)
college$X104<-gsub("—",NA,college$X104)
college$X105<-gsub("—",NA,college$X105)
college$X106<-gsub("—",NA,college$X106)
college$X103<-as.numeric(college$X103)
college$X104<-as.numeric(college$X104)
college$X105<-as.numeric(college$X105)
college$X106<-as.numeric(college$X106)
View(X103career)
college1<-cbind(college,meandif=mean(,2:5))
a<-data.frame("職業別"=college$職業別,x103=college$X103)
View(a)
a<-data.frame("職業別"=college$職業別,x103=college$X103)%<%arrangr(desc('x103'))
library(dplyr)
a<-data.frame("職業別"=college$職業別,x103=college$X103)%<%arrangr(desc('x103'))
a<-data.frame("職業別"=college$職業別,x103=college$X103)%>%arrangr(desc('x103'))
a<-data.frame("職業別"=college$職業別,x103=college$X103)%>%arrange(desc('x103'))
a<-data.frame("職業別"=college$職業別,x103=college$X103)%>%arrange(desc(`x103`))
a[10,1]
a[1:10,1]
a<-data.frame("職業別"=college$職業別,x103=college$X103)%>%arrange(`x103`)
a[1:10,1]
a1<-data.frame(a[1:10,1])
a1
View(a1)
a<-data.frame("職業別"=college$職業別,x103=college$X103)%>%arrange(desc(`x103`))
b<-data.frame("職業別"=college$職業別,x104=college$X104)%>%arrange(desc(`x104`))
c<-data.frame("職業別"=college$職業別,x105=college$X105)%>%arrange(desc(`x105`))
d<-data.frame("職業別"=college$職業別,x106=college$X106)%>%arrange(desc(`x106`))
a1<-data.frame("103年"=a[1:10,1],"104年"=b[1:10,1],"105年"=c[1:10,1],"106年"=d[1:10,1])
boy<-data.frame("103年"=a[1:10,1],"104年"=b[1:10,1],"105年"=c[1:10,1],"106年"=d[1:10,1])
View(boy)
View(X103_LevelSalary)
View(a)
View(b)
View(c)
View(d)
boy<-data.frame("103年"=a[1:10,],"104年"=b[1:10,],"105年"=c[1:10,],"106年"=d[1:10,])
str(a)
#第二題
college<-data.frame("職業別"=X103_LevelSalary$大職業別,"103"=X103_LevelSalary$`大學-女/男`,"104"=X104_LevelSalary$`大學-女/男`,"105"=X105_LevelSalary$`大學-女/男`,"106"=X106_LevelSalary$`大學-女/男`)
college$X103<-gsub("—",NA,college$X103)
college$X104<-gsub("—",NA,college$X104)
college$X105<-gsub("—",NA,college$X105)
college$X106<-gsub("—",NA,college$X106)
college$X103<-as.numeric(college$X103)
college$X104<-as.numeric(college$X104)
college$X105<-as.numeric(college$X105)
college$X106<-as.numeric(college$X106)
str(college)
library(dplyr)
college$X103<-as.numeric(college$X103)
#第三題
salary106<-data.frame("職業別"=X106_LevelSalary$大職業別,universe=X106_LevelSalary$`大學-薪資`,research=X106_LevelSalary$`研究所及以上-薪資`)
salary106$universe<-gsub("—",NA,salary106$universe)
salary106$research<-gsub("—",NA,salary106$research)
salary106$universe<-as.numeric(salary106$universe)
salary106$research<-as.numeric(salary106$research)
salary_106<-cbind(salary106,increase=salary106$research/salary106$universe)%>%arrange(desc(`increase`))
salary_106[1:10,1]
#第二題
college<-data.frame("職業別"=X103_LevelSalary$大職業別,"103"=X103_LevelSalary$`大學-女/男`,"104"=X104_LevelSalary$`大學-女/男`,"105"=X105_LevelSalary$`大學-女/男`,"106"=X106_LevelSalary$`大學-女/男`)
college$X103<-gsub("—",NA,college$X103)
college$X104<-gsub("—",NA,college$X104)
college$X105<-gsub("—",NA,college$X105)
college$X106<-gsub("—",NA,college$X106)
college$X103<-as.numeric(college$X103)
college$X104<-as.numeric(college$X104)
library(dplyr)
install.packages("knitr")
install.packages("knitr")
#第一題
#讀取資料
X103_LevelSalary <- read_csv("C:/Users/Mimi Liao/Desktop/A17000000J-020066-Qod/103_LevelSalary.csv")
X104_LevelSalary <- read_csv("C:/Users/Mimi Liao/Desktop/A17000000J-020066-Qod/104_LevelSalary.csv")
X105_LevelSalary <- read_csv("C:/Users/Mimi Liao/Desktop/A17000000J-020066-Qod/105_LevelSalary.csv")
#第一題
#讀取資料
X103_LevelSalary <- read_csv("C:/Users/Mimi Liao/Desktop/A17000000J-020066-Qod/103_LevelSalary.csv")
#將所需的資料欄位自 X103_LevelSalary 及 X106_LevelSalary 中取出，變成新的表格 university
university<-data.frame("職業別"=X103_LevelSalary$大職業別,"103"=X103_LevelSalary$`大學-薪資`,"106"=X106_LevelSalary$`大學-薪資`)
library(readr)
#第一題
#讀取資料
X103_LevelSalary <- read_csv("C:/Users/Mimi Liao/Desktop/A17000000J-020066-Qod/103_LevelSalary.csv")
X104_LevelSalary <- read_csv("C:/Users/Mimi Liao/Desktop/A17000000J-020066-Qod/104_LevelSalary.csv")
X105_LevelSalary <- read_csv("C:/Users/Mimi Liao/Desktop/A17000000J-020066-Qod/105_LevelSalary.csv")
X106_LevelSalary <- read_csv("C:/Users/Mimi Liao/Desktop/A17000000J-020066-Qod/106_LevelSalary.csv")
View(X106_LevelSalary)
#將所需的資料欄位自 X103_LevelSalary 及 X106_LevelSalary 中取出，變成新的表格 university
university<-data.frame("職業別"=X103_LevelSalary$大職業別,"103"=X103_LevelSalary$`大學-薪資`,"106"=X106_LevelSalary$`大學-薪資`)
#將 university 資料中的-轉成空值，並轉換資料型態為數字型態
university$X103<-gsub("—",NA,university$X103)
university$X106<-gsub("—",NA,university$X106)
university$職業別<-as.character(university$職業別)
university$X103<-as.numeric(university$X103)
university$X106<-as.numeric(university$X106)
#算出兩年中薪資提高的比例並將他由大到小排序，儲存在新的表格中 universityadd
universityadd<-cbind(university,increase=university$X106/university$X103)%>%arrange(desc(`increase`))
#找出前十名
universityadd[1:10,1]
library(dplyr)
#算出兩年中薪資提高的比例並將他由大到小排序，儲存在新的表格中 universityadd
universityadd<-cbind(university,increase=university$X106/university$X103)%>%arrange(desc(`increase`))
#找出前十名
universityadd[1:10,1]
#找出提高比例大於1.05的資料
a<-filter(universityadd,increase>1.05)
a[,1]
#分析有哪些職業別
b<-sapply(strsplit(a$職業別,"-"),'[',1)
knitr::kable(table(b))
#第二題
college<-data.frame("職業別"=X103_LevelSalary$大職業別,"103"=X103_LevelSalary$`大學-女/男`,"104"=X104_LevelSalary$`大學-女/男`,"105"=X105_LevelSalary$`大學-女/男`,"106"=X106_LevelSalary$`大學-女/男`)
college$X103<-gsub("—",NA,college$X103)
college$X104<-gsub("—",NA,college$X104)
college$X105<-gsub("—",NA,college$X105)
college$X106<-gsub("—",NA,college$X106)
college$X103<-as.numeric(college$X103)
college$X104<-as.numeric(college$X104)
college$X105<-as.numeric(college$X105)
college$X106<-as.numeric(college$X106)
str(college)
a<-data.frame("職業別"=college$職業別,x103=college$X103)%>%arrange(desc(`x103`))
b<-data.frame("職業別"=college$職業別,x104=college$X104)%>%arrange(desc(`x104`))
c<-data.frame("職業別"=college$職業別,x105=college$X105)%>%arrange(desc(`x105`))
d<-data.frame("職業別"=college$職業別,x106=college$X106)%>%arrange(desc(`x106`))
boy<-data.frame("103年"=a[1:10,],"104年"=b[1:10,],"105年"=c[1:10,],"106年"=d[1:10,])
str(a)
a1<-data.frame("職業別"=college$職業別,x103=college$X103)%>%arrange(`x103`)
str(college)
college$X103<-as.numeric(college$X103)
#第四題
#列出有興趣的職業別
hobit<-filter(salary_106,職業別%in% c("藝術_娛樂及休閒服務業-技術員及助理專業人員","醫療保健服務業-技術員及助理專業人員","教育服務業-技術員及助理專業人員","支援服務業-技術員及助理專業人員","專業_科學及技術服務業-專業人員"))
alary106<-data.frame("職業別"=X106_LevelSalary$大職業別,universe=X106_LevelSalary$`大學-薪資`,research=X106_LevelSalary$`研究所及以上-薪資`)
#第三題
#取出106年大學畢業薪資及研究所畢業薪資放入salary106
salary106<-data.frame("職業別"=X106_LevelSalary$大職業別,universe=X106_LevelSalary$`大學-薪資`,research=X106_LevelSalary$`研究所及以上-薪資`)
#將 salary106 資料中的-轉成空值，並轉換資料型態為數字型態
salary106$universe<-gsub("—",NA,salary106$universe)
salary106$research<-gsub("—",NA,salary106$research)
salary106$universe<-as.numeric(salary106$universe)
salary106$research<-as.numeric(salary106$research)
#計算兩者之間的比例，新增至salary_106之後由大到小排序
salary_106<-cbind(salary106,increase=salary106$research/salary106$universe)%>%arrange(desc(`increase`))
#取出差異最大的前十名
salary_106[1:10,1]
#第四題
#列出有興趣的職業別
hobit<-filter(salary_106,職業別%in% c("藝術_娛樂及休閒服務業-技術員及助理專業人員","醫療保健服務業-技術員及助理專業人員","教育服務業-技術員及助理專業人員","支援服務業-技術員及助理專業人員","專業_科學及技術服務業-專業人員"))
#計算研究所與大學畢業的薪資差異
hobitsalary<-cbind(hobit,dif=hobit$research-hobit$universe)
str(hobitsalary)
hobitsalary
View(hobitsalary)
#第三題
#取出106年大學畢業薪資及研究所畢業薪資放入salary106
salary106<-data.frame("職業別"=X106_LevelSalary$大職業別,universe=X106_LevelSalary$`大學-薪資`,research=X106_LevelSalary$`研究所及以上-薪資`)
#將 salary106 資料中的-轉成空值，並轉換資料型態為數字型態
salary106$universe<-gsub("—",NA,salary106$universe)
salary106$research<-gsub("—",NA,salary106$research)
salary106$universe<-as.numeric(salary106$universe)
salary106$research<-as.numeric(salary106$research)
#計算兩者之間的比例，新增至salary_106之後由大到小排序
salary_106<-cbind(salary106,increase=salary106$research/salary106$universe)%>%arrange(desc(`increase`))
#取出差異最大的前十名
salary_106[1:10,1]
View(alary106)
View(university)
View(university)
View(universityadd)
View(X103_LevelSalary)
## 106年度薪資較103年度薪資高的職業有哪些? 請按照提高比例由大到小排序
### 將所需的資料欄位自 X103_LevelSalary 及 X106_LevelSalary 中取出，變成新的表格 university
university<-data.frame("職業別"=X103_LevelSalary$大職業別,"103"=X103_LevelSalary$`大學-薪資`,"106"=X106_LevelSalary$`大學-薪資`)
### 將 university 資料中的-轉成空值，並轉換資料型態為數字型態
university$X103<-gsub("—",NA,university$X103)
university$X106<-gsub("—",NA,university$X106)
university$職業別<-as.character(university$職業別)
university$X103<-as.numeric(university$X103)
university$X106<-as.numeric(university$X106)
### 算出兩年中薪資提高的比例並將他由大到小排序，儲存在新的表格中 universityadd
universityadd<-cbind(university,increase=university$X106/university$X103)%>%arrange(desc(`increase`))
### 找出前十名
universityadd[1:10,1]
## 提高超過5%的的職業有哪些
a<-filter(universityadd,increase>1.05)
a[,1]
## 主要的職業種別是哪些種類呢
b<-sapply(strsplit(a$職業別,"-"),'[',1)
knitr::kable(table(b))
